// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------



/// Make a context based selector a little more friendly
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}



/// Place child img as a full screen background
@mixin full-screen-bg($safe-bg-color: white) {
  position: relative;
  &__background {
    background: $safe-bg-color;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -10;
  }
}



/// Center children vertically, horizontally or both
/// @param {String} $position
@mixin center($position: both) {
  display: flex;
  @if $position == 'both' {
    align-items: center;
    justify-content: center;
  } @else if $position == 'vertical' {
    align-items: center;
  } @else if $position == 'horizontal' {
    justify-content: center;
  } @else if $position == 'none' {
    align-items: stretch;
    justify-content: flex-start;
  }
}



/// Appearing underline on hover
/// @param {String} $underline-color
@mixin underline($underline-color: white) {
  position: relative;
  &::after {
    display: block;
    content: "";
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0;
    opacity: 0;
    border-radius: 1em;
    transition: all 0.3s;
    transform: translateY(-0.25em);
  }
  &:hover::after,
  &:focus::after {
    height: 0.1em;
    opacity: 1;
    background: $underline-color;
    transform: translateY(0);
  }
  &:active::after {
    transform: scaleX(1.05);
  }
}


/// Decorative circle with an arrow inside
@mixin decorative-circle {
  height: $decorative-circle-size;
  width: $decorative-circle-size;
  line-height: $decorative-circle-size;
  border: 1rem dashed #fff;
  border-radius: 50%;
  font-family: 'icomoon';
  content: '\e901';
}


/// Works in tandem with the real-vh-height.js function to display sections correctly on mobiles
/// @param {Number} $height
@mixin real-vh-height($height: 100) {
  height: #{$height}vh; /* Fallback for browsers that do not support Custom Properties */
  height: calc(var(--vh, 1vh) * #{$height});
}


/// Learn more button with transparent bg
/// @param {Color} $color
@mixin learn-more-btn($color: #fff, $active-color: transparent) {
  padding: 0.8em 1.8em;
  border: 1.5rem solid $color;
  border-radius: 4rem;
  color: #{$color};
  // background: #{$bg};
  text-transform: lowercase;
  font-variant: small-caps;
  font-weight: bold;
  font-size: 1.1em;
  letter-spacing: 0.1em;
  transition: all 0.3s;

  &:hover,
  &:focus {
    color: #{$active-color};
    background: #{$color};
  }
  &:active {
    color: #{$active-color};
    background: #{$color};
    transform: scale(1.04);
  }
}



// This doesn't work with multiple borders
@mixin border-bottom-dotted($size: 1px, $gap: 5px, $color: inherit) {
  @include dotted-border((bottom, $size, $gap, $color));
}



@function bd-top($size: 1px, $gap: 5px, $color: #333) {
  @return (top, $size, $gap, $color);
}
@function bd-right($size: 1px, $gap: 5px, $color: #333) {
  @return (right, $size, $gap, $color);
}
@function bd-bottom($size: 1px, $gap: 5px, $color: #333) {
  @return (bottom, $size, $gap, $color);
}
@function bd-left($size: 1px, $gap: 5px, $color: #333) {
  @return (left, $size, $gap, $color);
}
// @function bd-all($size: 1px, $gap: 5px, $color: #333) {
//   @return bd-horizontal($size, $gap, $color), bd-vertical($size, $gap, $color);
// }
// @function bd-horizontal($size: 1px, $gap: 5px, $color: #333) {
//   @return bd-right($size, $gap, $color), bd-left($size, $gap, $color);
// }
// @function bd-vertical($size: 1px, $gap: 5px, $color: #333) {
//   @return (top, $size, $gap, $color), (top, $size, $gap, $color);
// }


@mixin dotted($parameters...) {
  $bg-image-list: ();
  $bg-position-list: ();
  $bg-size-list: ();
  $bg-repeat-list: ();

  @each $side, $size, $gap, $color in $parameters {
    $section: $size + $gap;
    $gradient:  $color, $color ($size / $section * 100%), transparent ($size / $section * 100%);

    $bg-image-value: linear-gradient(to right, $gradient);
    $bg-position-value: 0 100%;
    $bg-size-value: $section $size;
    $bg-repeat-value: repeat-x;

    @if $side == 'top' {
      $bg-position-value: 100% 0;
      $bg-image-value: linear-gradient(to left, $gradient);
    } 
    @if $side == 'right' or $side == 'left' {
      $bg-repeat-value: repeat-y;
      $bg-size-value: $size $section;
      @if $side == 'right' {
        $bg-position-value: 100% 100%;
        $bg-image-value: linear-gradient(to top, $gradient);
      } @else {
        $bg-position-value: 0 0;
        $bg-image-value: linear-gradient(to bottom, $gradient);
      }
    }

    $bg-image-list: append($bg-image-list, $bg-image-value, 'comma');
    $bg-size-list: append($bg-size-list, $bg-size-value, 'comma');
    $bg-position-list: append($bg-position-list, $bg-position-value, 'comma');
    $bg-repeat-list: append($bg-repeat-list, $bg-repeat-value, 'comma');
  }

  background-image: $bg-image-list;
  background-size: $bg-size-list;
  background-position: $bg-position-list;
  background-repeat: $bg-repeat-list;
}
//https://github.com/wildhaber/empty-state/blob/master/src/shapes.mixin.scss

// @mixin dotted-clear {
//   background: none;
// }